# Environment configuration
# =========================

env_default: &env_default
  working_directory: ~/near-membrane
  docker:
    - image: cimg/node:lts-browsers


# Commands definitions
# ====================

# Yarn cache
restore_yarn_cache: &restore_yarn_cache
  restore_cache:
    keys:
      - yarn-v4-{{ checksum "yarn.lock" }}

save_yarn_cache: &save_yarn_cache
  save_cache:
    key: yarn-v4-{{ checksum "yarn.lock" }}
    paths:
      - ~/.cache/yarn

# Workspace
save_workspace: &save_workspace
  persist_to_workspace:
    root: .
    paths: .

load_workspace: &load_workspace
  attach_workspace:
    at: ~/near-membrane

# Build
install: &install
  run:
    name: Install and build
    command: |
      yarn install --frozen-lockfile
      yarn build

# Checks
run_linter: &run_linter
  run:
    name: Run linting
    command: yarn lint

# Jest tests for near-membrane-node
run_node_tests: &run_node_tests
  run:
    name: Run Node tests (Jest)
    command: yarn coverage:jest

# Karma tests for near-membrane-dom
run_browser_tests: &run_browser_tests
  run:
    name: Run DOM tests (Karma)
    command: yarn coverage:karma

# Run & Merge the two coverage reports
run_merge_coverage: &run_merge_coverage
  run:
    name: Run & Merge Coverage Reports
    command: |
      yarn coverage

store_coverage: &store_coverage
  store_artifacts:
    path: coverage/report


# Jobs definition
# ===============

version: 2
jobs:
  'Build Test Workspace':
    <<: *env_default
    steps:
      - checkout
      - *restore_yarn_cache
      - *install
      - *save_yarn_cache
      - *save_workspace

  'Run linter (via ESLint)':
    <<: *env_default
    steps:
      - *load_workspace
      - *run_linter

  'Run unit tests in Node.js (via Jest)':
    <<: *env_default
    steps:
      - *load_workspace
      - *run_node_tests

  'Run functional tests in ChromeHeadless (via Karma)':
    <<: *env_default
    steps:
      - *load_workspace
      - *run_browser_tests

  'Run, Merge & Store Coverage':
    <<: *env_default
    steps:
      - *load_workspace
      - *run_merge_coverage
      - *store_coverage

# Workflows definition
# ====================
workflows:
  version: 2
  'Build & Test':
    jobs:
      - 'Build Test Workspace'
      - 'Run linter (via ESLint)':
          requires:
            - 'Build Test Workspace'
      - 'Run unit tests in Node.js (via Jest)':
          requires:
            - 'Build Test Workspace'
      - 'Run functional tests in ChromeHeadless (via Karma)':
          requires:
            - 'Build Test Workspace'
      - 'Run, Merge & Store Coverage':
          requires:
            - 'Build Test Workspace'

